//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class MPCReportingController, NSData, NSString, SSVPlayActivityEventContainerIDs;

@interface TVMusicPlaybackObserver : NSObject
{
    NSData *_currentJingleReportingTimedMetadata;	// 8 = 0x8
    _Bool _hasSetLastPlayEventTimeStamp;	// 16 = 0x10
    _Bool _isScrubbing;	// 17 = 0x11
    id <TVSMediaItem> _itemForElapsedTimeChange;	// 24 = 0x18
    double _lastPlayEventEndTimeForCurrentItem;	// 32 = 0x20
    double _lastPlayEventTimeIntervalSinceReferenceDate;	// 40 = 0x28
    NSString *_playbackSessionID;	// 48 = 0x30
    _Bool _shouldReportAsPlaying;	// 56 = 0x38
    double _startTimeForElapsedTimeChange;	// 64 = 0x40
    id _elapsedTimeObserverToken;	// 72 = 0x48
    SSVPlayActivityEventContainerIDs *_lastContainer;	// 80 = 0x50
    unsigned long long _lastContainerType;	// 88 = 0x58
    _Bool _offline;	// 96 = 0x60
    _Bool _SBEnabled;	// 97 = 0x61
    id <TVSPlayback> _player;	// 104 = 0x68
    MPCReportingController *_reportingController;	// 112 = 0x70
    unsigned long long _storeAccountID;	// 120 = 0x78
}

+ (_Bool)_isContainerEqual:(id)arg1 toContainer:(id)arg2;	// IMP=0x00000001000218ac
@property(nonatomic) unsigned long long storeAccountID; // @synthesize storeAccountID=_storeAccountID;
@property(nonatomic, getter=isSBEnabled) _Bool SBEnabled; // @synthesize SBEnabled=_SBEnabled;
@property(readonly, nonatomic) MPCReportingController *reportingController; // @synthesize reportingController=_reportingController;
@property(nonatomic, getter=isOffline) _Bool offline; // @synthesize offline=_offline;
@property(readonly, nonatomic) id <TVSPlayback> player; // @synthesize player=_player;
- (void).cxx_destruct;	// IMP=0x00000001000232d8
- (id)_getJingleTimedMetadataFromAVItemTimedMetadata:(id)arg1;	// IMP=0x0000000100022fac
- (_Bool)_isValidReportingMediaIem:(id)arg1;	// IMP=0x0000000100022f4c
- (_Bool)_shouldReportRelativeTimeForMediaItem:(id)arg1;	// IMP=0x0000000100022ee8
- (double)_itemStartTimeForItem:(id)arg1;	// IMP=0x0000000100022ea8
- (double)_itemEndTimeForItem:(id)arg1 withProposedEndTime:(double)arg2;	// IMP=0x0000000100022e00
- (void)_setLastPlayEventEndTimeForCurrentItem:(double)arg1;	// IMP=0x0000000100022da8
- (id)_stringForEndReason:(unsigned long long)arg1;	// IMP=0x0000000100022c74
- (void)_recordPlayActivityEvent:(id)arg1 forMediaItem:(id)arg2;	// IMP=0x0000000100022ab8
- (void)_sendContainerPlaybackNotification:(id)arg1;	// IMP=0x0000000100022a38
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;	// IMP=0x0000000100022a18
- (void)_timedMetadataDidChange;	// IMP=0x0000000100022838
- (void)_playerDidSetElapsedTime:(double)arg1;	// IMP=0x00000001000226cc
- (void)_playerDidStallNotification:(id)arg1;	// IMP=0x00000001000225c0
- (void)_playerErrorNotification:(id)arg1;	// IMP=0x00000001000224e0
- (void)_playerPlaybackStateDidChangeNotification:(id)arg1;	// IMP=0x0000000100022178
- (void)_playerItemDidChangeNotification:(id)arg1;	// IMP=0x00000001000220d0
- (void)_playerItemWillChangeNotification:(id)arg1;	// IMP=0x0000000100021d98
- (id)newReportingPlaybackActivityEventForPlayActivityEvent:(id)arg1 mediaItem:(id)arg2;	// IMP=0x0000000100021ca4
- (id)newPlayActivityEventForMediaItem:(id)arg1 eventType:(unsigned long long)arg2;	// IMP=0x0000000100020b98
- (id)newPlayActivityEndEventForMediaItem:(id)arg1;	// IMP=0x0000000100020b88
- (id)newPlayActivityStartEventForMediaItem:(id)arg1;	// IMP=0x0000000100020b78
- (void)reportPlayActivityEvent:(id)arg1 forMediaItem:(id)arg2;	// IMP=0x0000000100020b28
- (void)dealloc;	// IMP=0x0000000100020998
- (id)initWithPlayer:(id)arg1 reportingController:(id)arg2;	// IMP=0x00000001000204b0

@end

