//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class ADAdImpressionPublicAttributes, ADSAdImpression, ADSCreativeController, NSMutableSet, NSString, NSTimer;

@interface ADSAdImpressionController : NSObject
{
    _Bool _supportsAuthentication;	// 8 = 0x8
    _Bool _policyEngineManagedAd;	// 9 = 0x9
    ADSAdImpression *_ad;	// 16 = 0x10
    NSString *_authenticationUserName;	// 24 = 0x18
    CDUnknownBlockType _loadCompletionHandler;	// 32 = 0x20
    NSMutableSet *_pendingRequiredItems;	// 40 = 0x28
    NSMutableSet *_allDownloadJobs;	// 48 = 0x30
    NSMutableSet *_inflightRequests;	// 56 = 0x38
    NSTimer *_loadTimeoutTimer;	// 64 = 0x40
    ADSCreativeController *_creativeController;	// 72 = 0x48
    NSString *_clientBundleIdentifier;	// 80 = 0x50
}

+ (_Bool)validateAdCandidate:(id)arg1 forContainerSize:(struct CGSize)arg2 creativeType:(int)arg3;	// IMP=0x00000001000054dc
+ (void)validateAdData:(id)arg1 forClient:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000100004eb4
+ (id)sharedDownloader;	// IMP=0x0000000100004e30
@property(readonly, copy, nonatomic) NSString *clientBundleIdentifier; // @synthesize clientBundleIdentifier=_clientBundleIdentifier;
@property(retain, nonatomic) ADSCreativeController *creativeController; // @synthesize creativeController=_creativeController;
@property(retain, nonatomic) NSTimer *loadTimeoutTimer; // @synthesize loadTimeoutTimer=_loadTimeoutTimer;
@property(retain, nonatomic) NSMutableSet *inflightRequests; // @synthesize inflightRequests=_inflightRequests;
@property(retain, nonatomic) NSMutableSet *allDownloadJobs; // @synthesize allDownloadJobs=_allDownloadJobs;
@property(retain, nonatomic) NSMutableSet *pendingRequiredItems; // @synthesize pendingRequiredItems=_pendingRequiredItems;
@property(copy, nonatomic) CDUnknownBlockType loadCompletionHandler; // @synthesize loadCompletionHandler=_loadCompletionHandler;
@property(nonatomic) _Bool policyEngineManagedAd; // @synthesize policyEngineManagedAd=_policyEngineManagedAd;
@property(nonatomic) _Bool supportsAuthentication; // @synthesize supportsAuthentication=_supportsAuthentication;
@property(copy, nonatomic) NSString *authenticationUserName; // @synthesize authenticationUserName=_authenticationUserName;
@property(readonly, nonatomic) ADSAdImpression *ad; // @synthesize ad=_ad;
- (void)reportNativeAdFrameSize:(struct CGRect)arg1 forWindow:(id)arg2;	// IMP=0x0000000100009e4c
- (void)reportAdRewardResult:(_Bool)arg1 forReward:(id)arg2 withErrorMessage:(id)arg3;	// IMP=0x0000000100009d84
- (void)reportServerErrorWithCode:(int)arg1 details:(id)arg2 failingURLs:(id)arg3;	// IMP=0x0000000100009b3c
- (void)reportContentErrorWithInfo:(id)arg1;	// IMP=0x00000001000095e0
- (void)reportContentEvent:(id)arg1 origin:(int)arg2;	// IMP=0x00000001000094f4
- (void)reportSystemEvent:(int)arg1;	// IMP=0x000000010000944c
- (void)reportExternalActionApproved:(_Bool)arg1;	// IMP=0x0000000100009228
- (void)reportConfirmedClick;	// IMP=0x000000010000908c
- (void)reportAdResumed;	// IMP=0x0000000100008fd0
- (void)reportAdPaused;	// IMP=0x0000000100008e84
- (void)reportAdStartedForImpressionSource:(int)arg1;	// IMP=0x0000000100008d6c
- (void)reportAdPlaybackFailedForURL:(id)arg1;	// IMP=0x0000000100008c98
- (void)reportAdHasFinishedForContentHash:(id)arg1;	// IMP=0x0000000100008bc4
- (void)reportClickAtLocation:(struct CGPoint)arg1 withAdViewFrame:(struct CGRect)arg2;	// IMP=0x0000000100008980
- (void)reportAdActionBegan;	// IMP=0x000000010000889c
- (void)reportDidHideAd;	// IMP=0x00000001000087fc
- (void)reportDidShowAd;	// IMP=0x000000010000875c
- (void)reportPrerollDidStop;	// IMP=0x0000000100008700
- (void)reportPrerollDidStart;	// IMP=0x0000000100008660
- (void)reportImpression;	// IMP=0x0000000100008554
@property(readonly, copy, nonatomic) NSString *actionIdentifier;
@property(readonly, copy, nonatomic) NSString *adIdentifier;
@property(readonly, nonatomic) _Bool hasValidAdIdentifier;
- (void)adActionEndedWithSystemEvent:(int)arg1;	// IMP=0x00000001000083a0
- (void)setAdSpaceType:(int)arg1;	// IMP=0x0000000100008350
@property(readonly, nonatomic) double accumulatedVisibleTime;
- (void)requestReward:(id)arg1 callback:(CDUnknownBlockType)arg2;	// IMP=0x0000000100008208
- (void)scheduleTimeBasedConfirmedClickIfNeeded;	// IMP=0x0000000100007f5c
@property(readonly, nonatomic) _Bool shouldUseTimeBasedConfirmedClick;
- (void)loadCreativeControllerForSize:(struct CGSize)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100007cf4
- (void)_load;	// IMP=0x00000001000073cc
- (void)_loadTimedOut;	// IMP=0x00000001000072b0
- (void)_fetchWebArchiveWithURL:(id)arg1 injectQueryString:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000100006dc0
- (void)_fetchDataAtURL:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100006a24
- (_Bool)_handleArchiveSubResource:(id)arg1 maxAge:(double)arg2;	// IMP=0x000000010000680c
- (id)_assetRetrieveErrorForURLString:(id)arg1 errorMessage:(id)arg2;	// IMP=0x00000001000065a4
- (void)_failWithError:(id)arg1;	// IMP=0x00000001000064b0
- (void)cancelLoading;	// IMP=0x000000010000634c
- (void)_processCompletionOfItem:(id)arg1 error:(id)arg2;	// IMP=0x0000000100005fd4
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;	// IMP=0x0000000100005f40
@property(readonly, nonatomic) ADAdImpressionPublicAttributes *publicAttributes;
- (id)initWithAdData:(id)arg1 bundleID:(id)arg2 loadedCompletion:(CDUnknownBlockType)arg3;	// IMP=0x0000000100005784
- (void)dealloc;	// IMP=0x0000000100005560

@end

