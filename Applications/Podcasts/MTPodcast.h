//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSManagedObject.h"

#import "IMMetricsDataSource.h"

@class NSSet, NSString;

@interface MTPodcast : NSManagedObject <IMMetricsDataSource>
{
}

+ (long long)storeCollectionIdForRedirectURL:(id)arg1;	// IMP=0x000000010001c2e0
+ (id)redirectURLForStoreCollectionId:(long long)arg1;	// IMP=0x000000010001c1c4
+ (_Bool)isRedirectURL:(id)arg1;	// IMP=0x000000010001c114
+ (void)setRemovePlayedEpisodesSetting:(long long)arg1 forPodcastUuid:(id)arg2;	// IMP=0x000000010001b5dc
+ (double)timeIntervalForUpdate:(long long)arg1;	// IMP=0x000000010001b528
+ (long long)updateIntervalDefaultValue;	// IMP=0x000000010001b4c8
+ (unsigned long long)totalUnplayedCount;	// IMP=0x000000010001ac54
+ (id)insertNewPodcastInManagedObjectContext:(id)arg1 subscribed:(_Bool)arg2 url:(id)arg3 title:(id)arg4 author:(id)arg5 provider:(id)arg6 category:(id)arg7 imageUrl:(id)arg8 description:(id)arg9;	// IMP=0x000000010001a818
+ (id)latestEpisodeUuidForPodcastUuid:(id)arg1 ctx:(id)arg2;	// IMP=0x0000000100060850
+ (id)podcastUuidForEpisodeUuid:(id)arg1;	// IMP=0x00000001000604f0
+ (id)podcastUuidForFeedUrl:(id)arg1;	// IMP=0x000000010006048c
+ (id)podcastUuidForFeedUrlString:(id)arg1;	// IMP=0x0000000100060218
+ (id)predicateForAllPodcasts;	// IMP=0x00000001000601dc
+ (int)autoDownloadDefaultValue;	// IMP=0x0000000100060180
+ (long long)deletePlayedEpisodesDefaultValue;	// IMP=0x000000010005fc20
+ (long long)episodeLimitDefaultValue;	// IMP=0x000000010005fb64
+ (id)_imageFetchQueue;	// IMP=0x000000010008fa88
+ (void)_downloadArtworkForPodcastUuid:(id)arg1;	// IMP=0x000000010008fa10
+ (id)_defaultPlaceholderArtworkWithSize:(struct CGSize)arg1;	// IMP=0x000000010008f990
+ (void)fetchArtworkForPodcastUuid:(id)arg1 size:(struct CGSize)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000010008f4dc
+ (id)artworkForPodcastUuid:(id)arg1 size:(struct CGSize)arg2;	// IMP=0x000000010008f3fc
+ (id)predicateForPodcastStoreId:(long long)arg1;	// IMP=0x0000000100113cc8
+ (id)predicateForPodcastUUID:(id)arg1;	// IMP=0x0000000100113c88
+ (id)predicateForPodcastWithFeedUrl:(id)arg1;	// IMP=0x0000000100113ae0
+ (id)predicateForExcludingExplicitBasedOnSetting;	// IMP=0x0000000100113a60
+ (id)predicateForUpdateInterval:(long long)arg1;	// IMP=0x0000000100113940
+ (id)predicateForUpdatablePodcasts;	// IMP=0x00000001001137c8
+ (id)predicateForAutoDownloadType:(int)arg1;	// IMP=0x0000000100113788
+ (id)predicateForAutoDownloadEnabled;	// IMP=0x0000000100113658
+ (id)predicateForOrphanedFromCloud:(_Bool)arg1;	// IMP=0x00000001001135c8
+ (id)predicateForSubscribedAndNotHidden:(_Bool)arg1;	// IMP=0x0000000100113528
+ (id)predicateForSubscribed:(_Bool)arg1;	// IMP=0x0000000100113498
+ (id)userDefaultPropertiesAffectingPredicates;	// IMP=0x00000001001133e4
- (id)metricsAdditionalData;	// IMP=0x000000010001c550
- (id)metricsContentIdentifier;	// IMP=0x000000010001c3dc
- (id)bestFeedURLExcludingRedirectURL:(_Bool)arg1;	// IMP=0x000000010001be40
- (id)redirectURL;	// IMP=0x000000010001be04
- (_Bool)isVideoPodcast;	// IMP=0x000000010001bd3c
- (id)dateOfNewestEpisode;	// IMP=0x000000010001bca8
- (id)countOfAudioEpisodes;	// IMP=0x000000010001bc14
- (id)countOfUnplayedEpisodes;	// IMP=0x000000010001bb80
- (id)countOfNewEpisodes;	// IMP=0x000000010001baec
- (id)colorTheme;	// IMP=0x000000010001ba58
- (void)updateLastTouchDate;	// IMP=0x000000010001ba1c
- (void)resetGoDark;	// IMP=0x000000010001b994
@property(nonatomic, getter=isAuthenticatedDark) _Bool authenticatedDark;
@property(readonly, nonatomic, getter=isPastAutodownloadDark) _Bool autodownloadDark;
@property(readonly, nonatomic, getter=isPastFeedDark) _Bool feedDark;
@property(readonly, nonatomic, getter=isDark) _Bool dark;
@property(nonatomic) _Bool orphanedFromCloud; // @dynamic orphanedFromCloud;
- (id)twitterShareURL;	// IMP=0x000000010001b41c
- (id)shareURL;	// IMP=0x000000010001b3a8
- (id)bestAvailableStoreCleanURL;	// IMP=0x000000010001b1bc
- (id)bestDescription;	// IMP=0x000000010001b150
- (void)updateEpisodesMetadataIdentifiers;	// IMP=0x000000010001b034
@property(nonatomic) _Bool subscribed; // @dynamic subscribed;
@property(retain, nonatomic) NSString *updatedFeedURL; // @dynamic updatedFeedURL;
@property(retain, nonatomic) NSString *title; // @dynamic title;
- (id)_latestOrOldestEpisode:(_Bool)arg1 restrictToUserEpisodes:(_Bool)arg2 excludePlayed:(_Bool)arg3;	// IMP=0x0000000100061c88
- (id)newestEpisodeUuid;	// IMP=0x0000000100061bf0
- (id)oldestUserEpisodeNotPlayed;	// IMP=0x0000000100061bd8
- (id)oldestUserEpisode;	// IMP=0x0000000100061bc0
- (id)oldestEpisodeNotPlayed;	// IMP=0x0000000100061ba8
- (id)oldestEpisode;	// IMP=0x0000000100061b90
- (id)newestUserEpisodeNotPlayed;	// IMP=0x0000000100061b78
- (id)newestUserEpisode;	// IMP=0x0000000100061b60
- (id)newestEpisodeNotPlayed;	// IMP=0x0000000100061b48
- (id)newestEpisode;	// IMP=0x0000000100061b30
- (id)firstUserEpisodeNotPlayed;	// IMP=0x000000010006175c
- (id)_episodeAfterEpisode:(id)arg1 restrictToUserEpisodes:(_Bool)arg2;	// IMP=0x0000000100061284
- (id)episodeAfterEpisode:(id)arg1;	// IMP=0x0000000100061274
- (id)userEpisodeAfterEpisode:(id)arg1;	// IMP=0x0000000100061264
- (id)mostRecentlyPlayedEpisode;	// IMP=0x0000000100060e20
- (id)episodeToResume;	// IMP=0x0000000100060bd0
- (int)autoDownloadResolvedValue;	// IMP=0x000000010006012c
- (_Bool)autodownloadDefault;	// IMP=0x000000010006011c
@property(nonatomic) _Bool playbackNewestToOldest;
- (id)sortDescriptorsForPlayOrder;	// IMP=0x000000010005fecc
- (id)sortDescriptorsForSortOrder;	// IMP=0x000000010005fce4
@property(nonatomic) _Bool sortAscending;
- (_Bool)deletePlayedEpisodesResolvedValue;	// IMP=0x000000010005fbc0
- (long long)episodeLimitResolvedValue;	// IMP=0x000000010005fb10
- (_Bool)_stateForFlag:(long long)arg1;	// IMP=0x000000010005fad0
- (void)_setFlag:(long long)arg1 state:(_Bool)arg2;	// IMP=0x000000010005fa48
@property(nonatomic) _Bool needsArtworkUpdate;
@property(nonatomic) double lastDatePlayed; // @dynamic lastDatePlayed;
@property(nonatomic) _Bool isExplicit;
@property(nonatomic) _Bool importing;
@property(nonatomic) long long deletePlayedEpisodes; // @dynamic deletePlayedEpisodes;
@property(nonatomic) _Bool hasBeenSynced;
- (void)markPlaylistsForUpdate;	// IMP=0x000000010005f6c8
- (id)currentFeedURL;	// IMP=0x000000010005f57c
- (void)fetchArtworkWithSize:(struct CGSize)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010008f8f0
- (id)artworkWithSize:(struct CGSize)arg1;	// IMP=0x000000010008f864

// Remaining properties
@property(nonatomic) double addedDate; // @dynamic addedDate;
@property(retain, nonatomic) NSString *author; // @dynamic author;
@property(readonly, nonatomic) _Bool autoDownload; // @dynamic autoDownload;
@property(nonatomic) int autoDownloadType; // @dynamic autoDownloadType;
@property(retain, nonatomic) NSString *category; // @dynamic category;
@property(nonatomic) long long darkCount; // @dynamic darkCount;
@property(nonatomic) long long darkCountLocal; // @dynamic darkCountLocal;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(nonatomic) double downloadedDate; // @dynamic downloadedDate;
@property(nonatomic) long long episodeLimit; // @dynamic episodeLimit;
@property(retain, nonatomic) NSSet *episodes; // @dynamic episodes;
@property(retain, nonatomic) NSString *feedURL; // @dynamic feedURL;
@property(nonatomic) long long flags; // @dynamic flags;
@property(readonly) unsigned long long hash;
@property(nonatomic) _Bool hidden; // @dynamic hidden;
@property(retain, nonatomic) NSString *imageURL; // @dynamic imageURL;
@property(retain, nonatomic) NSString *itemDescription; // @dynamic itemDescription;
@property(nonatomic) long long keepEpisodes; // @dynamic keepEpisodes;
@property(nonatomic) double lastStoreEpisodesInfoCheckDate; // @dynamic lastStoreEpisodesInfoCheckDate;
@property(nonatomic) double lastStorePodcastInfoCheckDate; // @dynamic lastStorePodcastInfoCheckDate;
@property(nonatomic) double lastTouchDate; // @dynamic lastTouchDate;
@property(nonatomic) _Bool notifications; // @dynamic notifications;
@property(retain, nonatomic) NSSet *playlistSettings; // @dynamic playlistSettings;
@property(retain, nonatomic) NSSet *playlists; // @dynamic playlists;
@property(nonatomic) long long podcastPID; // @dynamic podcastPID;
@property(retain, nonatomic) NSString *provider; // @dynamic provider;
@property(nonatomic) _Bool showPlacardForOrphanedFromCloud; // @dynamic showPlacardForOrphanedFromCloud;
@property(nonatomic) _Bool showPlacardForRemovePlayedEpisodes; // @dynamic showPlacardForRemovePlayedEpisodes;
@property(nonatomic) _Bool showPlacardForSavedEpisodes; // @dynamic showPlacardForSavedEpisodes;
@property(nonatomic) long long sortOrder; // @dynamic sortOrder;
@property(retain, nonatomic) NSString *storeCleanURL; // @dynamic storeCleanURL;
@property(nonatomic) long long storeCollectionId; // @dynamic storeCollectionId;
@property(retain, nonatomic) NSString *storeShortURL; // @dynamic storeShortURL;
@property(readonly) Class superclass;
@property(nonatomic) double updateAvg; // @dynamic updateAvg;
@property(nonatomic) long long updateInterval; // @dynamic updateInterval;
@property(nonatomic) double updateStdDev; // @dynamic updateStdDev;
@property(nonatomic) double updatedDate; // @dynamic updatedDate;
@property(retain, nonatomic) NSString *uuid; // @dynamic uuid;

@end

