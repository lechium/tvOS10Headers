//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "NSCoding.h"

@class NSData, NSDictionary, NSObject<OS_dispatch_queue>;

@interface IMKeyValueStoreClampsController : NSObject <NSCoding>
{
    NSObject<OS_dispatch_queue> *_queue;	// 8 = 0x8
    NSDictionary *_transactionClamps;	// 16 = 0x10
    double _dsidCheckTimestamp;	// 24 = 0x18
    double _authenticationNeededTimestamp;	// 32 = 0x20
    double _userAcceptedSyncTimestamp;	// 40 = 0x28
    double _networkingBlockedUntil;	// 48 = 0x30
    double _backOffUntil;	// 56 = 0x38
    double _userCancelledSignInBackOffUntil;	// 64 = 0x40
    double _nextUserCancelBackOffInterval;	// 72 = 0x48
    NSData *_pendingUserDefaultArchivedData;	// 80 = 0x50
}

+ (id)sharedClampsController;	// IMP=0x0000000100054614
@property(retain) NSData *pendingUserDefaultArchivedData; // @synthesize pendingUserDefaultArchivedData=_pendingUserDefaultArchivedData;
@property double nextUserCancelBackOffInterval; // @synthesize nextUserCancelBackOffInterval=_nextUserCancelBackOffInterval;
@property double userCancelledSignInBackOffUntil; // @synthesize userCancelledSignInBackOffUntil=_userCancelledSignInBackOffUntil;
@property double backOffUntil; // @synthesize backOffUntil=_backOffUntil;
@property double networkingBlockedUntil; // @synthesize networkingBlockedUntil=_networkingBlockedUntil;
@property double userAcceptedSyncTimestamp; // @synthesize userAcceptedSyncTimestamp=_userAcceptedSyncTimestamp;
@property double authenticationNeededTimestamp; // @synthesize authenticationNeededTimestamp=_authenticationNeededTimestamp;
@property double dsidCheckTimestamp; // @synthesize dsidCheckTimestamp=_dsidCheckTimestamp;
@property(retain, nonatomic) NSDictionary *transactionClamps; // @synthesize transactionClamps=_transactionClamps;
- (_Bool)_canScheduleTransactionBasedOnUserCancelledSignIn:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100055e1c
- (_Bool)_canScheduleTransactionBasedOnBackOff:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100055d4c
- (_Bool)_canScheduleTransactionBasedOnDSIDCheck:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100055cd8
- (_Bool)_canScheduleTransactionBasedOfNetworkingBlocked:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100055c78
- (_Bool)_canScheduleTransactionBasedOnType:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100055a68
- (id)_keyForTransaction:(id)arg1;	// IMP=0x00000001000559c0
- (double)_rightNow;	// IMP=0x0000000100055994
- (_Bool)isNetworkingBlocked;	// IMP=0x0000000100055914
- (void)clearNetworkingBlocked;	// IMP=0x0000000100055904
- (void)setNetworkingBlocked;	// IMP=0x00000001000558b4
- (void)clearBackOff;	// IMP=0x000000010005587c
- (void)backOffForTimeInterval:(double)arg1;	// IMP=0x0000000100055828
- (void)clearUserCancelledSignIn;	// IMP=0x00000001000557dc
- (void)setUserCancelledSignIn;	// IMP=0x000000010005574c
- (_Bool)hasUserRecentlyAcceptedSync;	// IMP=0x00000001000556a8
- (void)clearUserAcceptedSyncTimestamp;	// IMP=0x0000000100055670
- (void)setUserAcceptedSyncTimestamp;	// IMP=0x000000010005562c
- (_Bool)hasAuthenticatedTooRecentlyForTransaction:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100055594
- (void)clearAuthenticationRequest;	// IMP=0x000000010005555c
- (void)setAuthenticationRequest;	// IMP=0x0000000100055518
- (void)clearDSIDCheckTimestamp;	// IMP=0x00000001000554e0
- (void)setDSIDCheckTimestamp;	// IMP=0x000000010005549c
- (void)clearTimestampForTransaction:(id)arg1;	// IMP=0x00000001000553e4
- (void)setTimestampForTransaction:(id)arg1;	// IMP=0x0000000100055310
- (void)reset;	// IMP=0x0000000100055260
- (void)accessTransactionClampsWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000001000550e4
- (_Bool)canScheduleTransaction:(id)arg1 error:(id *)arg2;	// IMP=0x000000010005502c
- (id)description;	// IMP=0x0000000100054ed8
- (void)dealloc;	// IMP=0x0000000100054e44
- (void)saveToUserDefaults;	// IMP=0x0000000100054a88
- (id)initWithCoder:(id)arg1;	// IMP=0x00000001000548cc
- (void)encodeWithCoder:(id)arg1;	// IMP=0x00000001000547a0
- (id)init;	// IMP=0x00000001000546fc

@end

